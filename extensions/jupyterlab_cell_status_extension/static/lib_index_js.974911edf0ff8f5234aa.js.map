{"version":3,"file":"lib_index_js.974911edf0ff8f5234aa.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACuD;AACvD,WAAW,oBAAoB;AACgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yEAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,IAAI,kFAAgC;AACpC,gBAAgB,OAAO;AACvB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,4FAA0C;AAC9C,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://jupyterlab_cell_status_extension/./lib/index.js"],"sourcesContent":["//https://jupyterlab.readthedocs.io/en/3.1.x/api/classes/notebook.notebookactions-1.html\nimport { NotebookActions } from '@jupyterlab/notebook';\n//import { IKernelConnection } from '@jupyterlab/services/Kernel IKernelConnection';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n/**\n * Initialization data for the jupyterlab_cell_status extension.\n */\nconst plugin = {\n    activate,\n    id: 'jupyterlab_cell_status_extension:plugin',\n    autoStart: true,\n    optional: [ISettingRegistry],\n};\nfunction activate(app, settingRegistry) {\n    console.log(\"jupyterlab_cell_status_extension:plugin activating...\");\n    if (settingRegistry) {\n        settingRegistry\n            .load(plugin.id)\n            .then(settings => {\n            const root = document.documentElement;\n            const updateSettings = () => {\n                const queue_color = settings.get('status_queue').composite;\n                const success_color = settings.get('status_success').composite;\n                const error_color = settings.get('status_error').composite;\n                root.style.setProperty('--jp-cell-status-queue', queue_color);\n                root.style.setProperty('--jp-cell-status-success', success_color);\n                root.style.setProperty('--jp-cell-status-error', error_color);\n            };\n            updateSettings();\n            // We can auto update the color\n            settings.changed.connect(updateSettings);\n        })\n            .catch(reason => {\n            console.error('Failed to load settings for jupyterlab_cell_status.', reason);\n        });\n    }\n    /*\n    IKernelConnection.connectionStatusChanged.connect((kernel, conn_stat) => {\n\n    console.log(\"KERNEL ****\"+conn_stat)\n    });\n    */\n    NotebookActions.executed.connect((_, args) => {\n        const { cell } = args;\n        const { success } = args;\n        if (cell.model.type == 'code') {\n            if (success)\n                cell.inputArea.promptNode.classList.add(\"executed-success\");\n            else\n                cell.inputArea.promptNode.classList.add(\"executed-error\");\n            cell.inputArea.promptNode.classList.remove(\"scheduled\");\n        }\n    });\n    NotebookActions.executionScheduled.connect((_, args) => {\n        const { cell } = args;\n        if (cell.model.type == 'code') {\n            cell.inputArea.promptNode.classList.remove(\"executed-success\");\n            cell.inputArea.promptNode.classList.remove(\"executed-error\");\n            cell.inputArea.promptNode.classList.add(\"scheduled\");\n        }\n    });\n    console.log(\"jupyterlab_cell_status_extension:plugin activated...\");\n}\nexport default plugin;\n"],"names":[],"sourceRoot":""}